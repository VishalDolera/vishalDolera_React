{"version":3,"sources":["logo.svg","App.js","Components/RegistrationFormik.js","index.js"],"names":["module","exports","App","RegistrationFormik","props","DataDisply","result","setState","users","state","initialValues","firstName","lastName","password","confirmPassword","email","gender","department","acceptTandC","validationSchema","Yup","shape","required","min","oneOf","onSubmit","this","errors","touched","className","name","type","component","value","as","htmlFor","Card","Header","Body","Title","Text","Footer","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dbfe1602.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n         GitConnection Example\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Card from \"react-bootstrap/Card\";\r\nclass RegistrationFormik extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    debugger;\r\n    this.state = { users: \"\" };\r\n  }\r\n\r\n  DataDisply = (result) => {\r\n    debugger;\r\n    this.setState({ users: result });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          password: \"\",\r\n          confirmPassword: \"\",\r\n          email: \"\",\r\n          gender: \"male\",\r\n          department: \"\",\r\n          acceptTandC: false,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          firstName: Yup.string().required(\"First Name is required!\"),\r\n          lastName: Yup.string().required(\"Last name is required\"),\r\n          password: Yup.string()\r\n            .min(6, \"Password length must be 6 char. long\")\r\n            .required(\"Password is required\"),\r\n          confirmPassword: Yup.string()\r\n            .oneOf([Yup.ref(\"password\")], \"Password must match\")\r\n            .required(\"Password is required\"),\r\n\r\n          email: Yup.string()\r\n            .email(\"Email is invalid\")\r\n            .required(\"Email is required\"),\r\n          department: Yup.string()\r\n            .oneOf(\r\n              [\r\n                \"WebDevloper\",\r\n                \"MobileDevloper\",\r\n                \"FullStackDeveloper\",\r\n                \"otherDEvloper\",\r\n              ],\r\n              \"Invalid Department\"\r\n            )\r\n            .required(\"Please Select Your Department\"),\r\n          acceptTandC: Yup.bool().oneOf([true], \"You must accept T&C\"),\r\n        })}\r\n        onSubmit={this.DataDisply}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <div className=\"form-group container bg-light shadow-lg text-muted mt-5\">\r\n              <div className=\"form-group col  \">\r\n                <label>First Name</label>\r\n                <Field\r\n                  name=\"firstName\"\r\n                  type=\"text\"\r\n                  className={\r\n                    \"form-control \" +\r\n                    (errors.firstName && touched.firstName ? \"is-invalid\" : \"\")\r\n                  }\r\n                />\r\n                <ErrorMessage\r\n                  name=\"firstName\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group col\">\r\n                <label>Last Name</label>\r\n                <Field\r\n                  name=\"lastName\"\r\n                  type=\"text\"\r\n                  className={\r\n                    \"form-control \" +\r\n                    (errors.lastName && touched.lastName ? \"is-invalid\" : \"\")\r\n                  }\r\n                />\r\n                <ErrorMessage\r\n                  name=\"lastName\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group col\">\r\n                <label>Password</label>\r\n                <Field\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  className={\r\n                    \"form-control \" +\r\n                    (errors.password && touched.password ? \"is-invalid\" : \"\")\r\n                  }\r\n                />\r\n                <ErrorMessage\r\n                  name=\"password\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group col\">\r\n                <label>Confirm password</label>\r\n                <Field\r\n                  name=\"confirmPassword\"\r\n                  type=\"password\"\r\n                  className={\r\n                    \"form-control \" +\r\n                    (errors.confirmPassword && touched.confirmPassword\r\n                      ? \"is-invalid\"\r\n                      : \"\")\r\n                  }\r\n                />\r\n                <ErrorMessage\r\n                  name=\"confirmPassword\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group col\">\r\n                <label>email</label>\r\n                <Field\r\n                  name=\"email\"\r\n                  type=\"text\"\r\n                  className={\r\n                    \"form-control \" +\r\n                    (errors.email && touched.email ? \"is-invalid\" : \"\")\r\n                  }\r\n                />\r\n                <ErrorMessage\r\n                  name=\"email\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group col\">\r\n                <label>Gender</label>\r\n                <div className=\"form-group col\">\r\n                  <Field\r\n                    name=\"gender\"\r\n                    type=\"radio\"\r\n                    value=\"male\"\r\n                    className={\r\n                      \" mr-2\" +\r\n                      (errors.gender && touched.gender ? \"is-invalid\" : \"\")\r\n                    }\r\n                  />\r\n\r\n                  <label>male</label>\r\n                  <Field\r\n                    name=\"gender\"\r\n                    type=\"radio\"\r\n                    value=\"female\"\r\n                    className={\r\n                      \"m-2 mr-2\" +\r\n                      (errors.gender && touched.gender ? \"is-invalid\" : \"\")\r\n                    }\r\n                  />\r\n                  <label>female</label>\r\n                </div>\r\n              </div>\r\n\r\n              <label className=\"form-group col\">\r\n                <Field\r\n                  name=\"department\"\r\n                  as=\"select\"\r\n                  className={\r\n                    errors.department && touched.department ? \"is-invalid\" : \"\"\r\n                  }\r\n                >\r\n                  <option value=\"\">Select Department</option>\r\n                  <option value=\"WebDevloper\">Web Developer</option>\r\n                  <option value=\"MobileDevloper\">Mobile Developer</option>\r\n                  <option value=\"FullStackDeveloper\">\r\n                    Full Stack Developer\r\n                  </option>\r\n                  <option value=\"otherDEvloper\">Other</option>\r\n                </Field>\r\n                <ErrorMessage\r\n                  name=\"department\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n              </label>\r\n              <div className=\"form-group col form-check\">\r\n                <Field\r\n                  type=\"checkbox\"\r\n                  name=\"acceptTandC\"\r\n                  className={\r\n                    \"form-check-input bg-primary shadow-lg\" +\r\n                    (errors.acceptTandC && touched.acceptTandC\r\n                      ? \" is-invalid\"\r\n                      : \"\")\r\n                  }\r\n                />\r\n                <label htmlFor=\"acceptTandC\" className=\"form-check-label \">\r\n                  Accept Terms & Conditions\r\n                </label>\r\n                <ErrorMessage\r\n                  name=\"acceptTandC\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn-lg w-25 shadow-lg bg-primary m-2 p-1\"\r\n                  value=\"submit\"\r\n                />\r\n                <input\r\n                  type=\"reset\"\r\n                  className=\"btn-lg w-25 shadow-lg bg-primary m-2 p-1\"\r\n                  value=\"reset\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-5 container\">\r\n              <Card className=\"text-center  shadow-lg text-muted\">\r\n                <Card.Header>User Details</Card.Header>\r\n                <Card.Body>\r\n                  <Card.Title>here are the Details</Card.Title>\r\n                  <Card.Text>\r\n                    FirstName:<b>{this.state.users.firstName}</b>\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    lastName:<b>{this.state.users.lastName}</b>\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    Email:<b>{this.state.users.email}</b>\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    Gender:<b>{this.state.users.gender}</b>\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    Department:<b>{this.state.users.department}</b>\r\n                  </Card.Text>\r\n                </Card.Body>\r\n                <Card.Footer className=\"text-primary\">\r\n                  Here a example of Formik\r\n                </Card.Footer>\r\n              </Card>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  }\r\n}\r\n\r\nRegistrationFormik.propTypes = {};\r\n\r\nexport default RegistrationFormik;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport RegistrationFormik from './Components/RegistrationFormik';\r\nReactDOM.render(<RegistrationFormik/>, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}